[{"C:\\webWork\\evilpxl\\src\\index.js":"1","C:\\webWork\\evilpxl\\src\\reportWebVitals.js":"2","C:\\webWork\\evilpxl\\src\\App.js":"3","C:\\webWork\\evilpxl\\src\\Pages\\Dash.jsx":"4","C:\\webWork\\evilpxl\\src\\Navigation\\index.jsx":"5","C:\\webWork\\evilpxl\\src\\shared\\Section.jsx":"6","C:\\webWork\\evilpxl\\src\\shared\\Button.jsx":"7","C:\\webWork\\evilpxl\\src\\shared\\Textfield.jsx":"8","C:\\webWork\\evilpxl\\src\\logic\\cook.js":"9","C:\\webWork\\evilpxl\\src\\shared\\Anchor.jsx":"10","C:\\webWork\\evilpxl\\src\\logic\\methods.js":"11"},{"size":335,"mtime":1611606486020,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":456,"mtime":1612546019417,"results":"15","hashOfConfig":"13"},{"size":230,"mtime":1611586546842,"results":"16","hashOfConfig":"13"},{"size":857,"mtime":1611584520743,"results":"17","hashOfConfig":"13"},{"size":1475,"mtime":1612546060682,"results":"18","hashOfConfig":"13"},{"size":207,"mtime":1611592145979,"results":"19","hashOfConfig":"13"},{"size":630,"mtime":1611634415910,"results":"20","hashOfConfig":"13"},{"size":506,"mtime":1611574347908,"results":"21","hashOfConfig":"13"},{"size":610,"mtime":1611586563817,"results":"22","hashOfConfig":"13"},{"size":1998,"mtime":1611625674263,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1vce0pr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\webWork\\evilpxl\\src\\index.js",[],["50","51"],"C:\\webWork\\evilpxl\\src\\reportWebVitals.js",[],"C:\\webWork\\evilpxl\\src\\App.js",[],"C:\\webWork\\evilpxl\\src\\Pages\\Dash.jsx",[],"C:\\webWork\\evilpxl\\src\\Navigation\\index.jsx",[],"C:\\webWork\\evilpxl\\src\\shared\\Section.jsx",["52","53","54","55","56"],"import React, { useState } from 'react';\nimport './Section.css';\n\n// components\nimport Textfield from './Textfield';\nimport Button from './Button';\n\nlet key = 0;\n\nconst array = [];\nconst dataArray = [];\nconst closure = [];\nlet cc = 0;\nlet isInArray = false;\n\nconst addToData = ( type, index, ref ) => {\n\n}\n\n// let textFields = [ <Textfield altClass={ `Key` } key={ key } index={ key } /> ];\n\nconst Section = props => {\n\n\tconst [ state, setState ] = useState(0);\n\n\tconst addEntry = type => {\n\n\t\tarray[++key] =\t<Textfield\n\t\t\taltClass={ type }\n\t\t\tkey={ key }\n\t\t\tindex={ key }\n\t\t\tinstance={ addToData }\n\t\t/>\n\n\t\tsetState(key);\n\t};\n\n\tconst closeEntry = event => {\n\n\t}\n\n\tconst saveData = event => {\n\n\t}\n\n\treturn(\n\t\t<div className=\"Section\">\n\n\t\t\t<div className=\"Text-Field-Wrapper\">\n\t\t\t\t{ array }\n\t\t\t</div>\n\n\t\t\t<div className=\"Button-Group\">\n\t\t\t\t<div className=\"Button-Group\">\n\t\t\t\t\t<Button text={ 'Key' }\n\t\t\t\t\t\tclicked={ ()=>addEntry('Key') }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button text={ 'Value' }\n\t\t\t\t\t\tclicked={ ()=>addEntry('Value') }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button text={ 'Array' }\n\t\t\t\t\t\tclicked={ ()=>addEntry('Array') }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button text={ 'Break' }\n\t\t\t\t\t\tclicked={ closeEntry }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button text={ 'Save' }\n\t\t\t\t\t\tclicked={ saveData }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Section;\n\n\n\n\n\n// {\n// \tLanguage: 'Sve.',\n// \tLanding:\n// \t{\n// \t\tGreeting:\n// \t\t{\n// \t\t\t[ Welcome, Wekcome ],\n// \t\t\t[ Title, 'Oliver-Twist'],\n// \t\t\tButtons: {\n// \t\t\t\t<\n// \t\t\t}\n// \t\t}\n// \t}\n// }","C:\\webWork\\evilpxl\\src\\shared\\Button.jsx",[],["57","58"],"C:\\webWork\\evilpxl\\src\\shared\\Textfield.jsx",["59","60"],"import React, { useEffect, useRef } from 'react';\nimport { unmountComponentAtNode } from \"react-dom\";\n\n// components\nimport Button from './Button';\n\nconst Textfield = ({ altClass, instance, index }) => {\n\tlet ref = useRef(null);\n\n\tuseEffect(() => {\n\t\tinstance(altClass, index, ref.current);\n\t}, []);\n\n\tconst deleteTextField = () => {\n\t}\n\n\treturn(\n\t\t<div className={ `Text-Group ${ altClass }` }>\n\t\t\t<textarea className={ `Textfield ${ altClass }` } type=\"textarea\" ref={ ref }>\n\t\t\t\t</textarea>\n\t\t\t\t<Button text={ 'X' }\n\t\t\t\t\taltClass=\"Inner-Button\"\n\t\t\t\t\tclicked={ deleteTextField }\n\n\t\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Textfield;","C:\\webWork\\evilpxl\\src\\logic\\cook.js",[],"C:\\webWork\\evilpxl\\src\\shared\\Anchor.jsx",[],"C:\\webWork\\evilpxl\\src\\logic\\methods.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":11,"column":7,"nodeType":"67","messageId":"68","endLine":11,"endColumn":16},{"ruleId":"65","severity":1,"message":"69","line":12,"column":7,"nodeType":"67","messageId":"68","endLine":12,"endColumn":14},{"ruleId":"65","severity":1,"message":"70","line":13,"column":5,"nodeType":"67","messageId":"68","endLine":13,"endColumn":7},{"ruleId":"65","severity":1,"message":"71","line":14,"column":5,"nodeType":"67","messageId":"68","endLine":14,"endColumn":14},{"ruleId":"65","severity":1,"message":"72","line":24,"column":10,"nodeType":"67","messageId":"68","endLine":24,"endColumn":15},{"ruleId":"61","replacedBy":"73"},{"ruleId":"63","replacedBy":"74"},{"ruleId":"65","severity":1,"message":"75","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":32},{"ruleId":"76","severity":1,"message":"77","line":12,"column":5,"nodeType":"78","endLine":12,"endColumn":7,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'dataArray' is assigned a value but never used.","Identifier","unusedVar","'closure' is assigned a value but never used.","'cc' is assigned a value but never used.","'isInArray' is assigned a value but never used.","'state' is assigned a value but never used.",["80"],["81"],"'unmountComponentAtNode' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'altClass', 'index', and 'instance'. Either include them or remove the dependency array. If 'instance' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [altClass, index, instance]",{"range":"85","text":"86"},[295,297],"[altClass, index, instance]"]